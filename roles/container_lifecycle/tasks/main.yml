---
# tasks file for container_lifecycle

# FIXME: properly handle template config changes
- name: Ensure podman installed
  ansible.builtin.dnf:
    name: podman
    state: present

- name: Gather information about the current running container
  containers.podman.podman_container_info:
    name: afiot-{{ service_name }}
  register: pre_install_container_info

- name: Install Transction
  when:
    - container_state in ["present", "installed"]
  block:
    - name: Pull down container image
      containers.podman.podman_image:
        name: "{{ container_image }}"
        tag: "{{ container_tag }}"
      when: (not pre_install_container_info['containers']) or ((pre_install_container_info['containers'][0]['Name'] == "afiot-" + service_name) and pre_install_container_info['containers'][0]['ImageName']
        != container_image + ":" + container_tag)

    - name: Template the systemd service unit file
      ansible.builtin.template:
        src: templates/systemd_unit.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}.service"
        mode: "0644"
      notify: Restart container service

    - name: Template the systemd health check timer unit file
      ansible.builtin.template:
        src: templates/systemd_timer.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.timer"
        mode: "0644"
      notify: Restart container service

    - name: Template the systemd health check service unit file
      ansible.builtin.template:
        src: templates/systemd_timer.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.service"
        mode: "0644"
      notify: Restart container service

    - name: Deamon reload systemd and start our service
      ansible.builtin.systemd:
        name: afiot-{{ service_name }}
        state: started
        enabled: true
        daemon_reload: true
      register: initial_start
  rescue:
    - name: Override container_tag for rollback
      ansible.builtin.set_fact:
        container_tag: "{{ pre_install_container_info['containers'][0]['ImageName'] | split(':')[-1] }}"

    - name: Template the systemd service unit file
      ansible.builtin.template:
        src: templates/systemd_unit.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}.service"
        mode: "0644"

    - name: Template the systemd health check timer unit file
      ansible.builtin.template:
        src: templates/systemd_timer.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.timer"
        mode: "0644"

    - name: Template the systemd health check service unit file
      ansible.builtin.template:
        src: templates/systemd_timer.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.service"
        mode: "0644"

    - name: Deamon reload systemd and start our service
      ansible.builtin.systemd:
        name: afiot-{{ service_name }}
        state: started
        enabled: true
        daemon_reload: true

- name: Uninstall Transction
  when:
    - container_state in ["absent", "uninstalled"]
    - pre_install_container_info['containers']
  block:
    - name: Stop service
      ansible.builtin.systemd:
        name: afiot-{{ service_name }}
        state: stopped
        enabled: false

    - name: Remove container image
      containers.podman.podman_image:
        name: "{{ container_image }}"
        tag: "{{ container_tag }}"
        state: absent

    - name: Check for systemd service unit file
      ansible.builtin.stat:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}.service"
      register: ssuf_st

    - name: Remove systemd service unit file
      ansible.builtin.file:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}.service"
        state: absent
      when: ssuf_st['stat']['exists']

    - name: Check for systemd health check timer unit file
      ansible.builtin.stat:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.timer"
      register: shctuf_st

    - name: Remove systemd health check timer unit file
      ansible.builtin.file:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.timer"
        state: absent
      when: shctuf_st['stat']['exists']

    - name: Template the systemd health check service unit file
      ansible.builtin.template:
        src: templates/systemd_timer.j2
        dest: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.service"
        mode: "0644"

    - name: Check for systemd health check service unit file
      ansible.builtin.stat:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.service"
      register: shcsuf_st

    - name: Remove systemd health check service unit file
      ansible.builtin.file:
        path: "{{ systemd_units_dir }}/afiot-{{ service_name }}-healthcheck.service"
        state: absent
      when: shcsuf_st['stat']['exists']

    - name: Deamon reload systemd to remove unit files from index
      ansible.builtin.systemd:
        daemon_reload: true
